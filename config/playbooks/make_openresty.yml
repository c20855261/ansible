---
- name: 安裝 OpenResty
  hosts: all
  become: yes
  vars:
    nginx_version: "1.25.3"
    openresty_version: "{{ nginx_version }}.1"
    install_prefix: "/opt/openresty"
    openresty_src: "openresty-{{ openresty_version }}"
    tmp_dir: "/tmp/openresty"
    nginx_temp_path: "/opt/openresty/nginx/temp"
    third_party_modules:
      - { name: "nginx_upstream_check_module", url: "https://github.com/yaoweibin/nginx_upstream_check_module.git" }
      - { name: "nginx-http-concat", url: "https://github.com/alibaba/nginx-http-concat.git" }
      - { name: "ngx_http_proxy_connect_module", url: "https://github.com/chobits/ngx_http_proxy_connect_module.git" }
      - { name: "ngx_http_geoip2_module", url: "https://github.com/leev/ngx_http_geoip2_module.git" }
      - { name: "nginx-module-vts", url: "https://github.com/vozlt/nginx-module-vts.git" }

  tasks:
    - name: Install dependencies for CentOS/RHEL
      package:
        name: "{{ item }}"
        state: present
      ignore_errors: yes
      when: ansible_os_family == "RedHat"
      loop:
        - wget
        - patch
        - gcc
        - pcre-devel
        - openssl-devel
        - zlib-devel
        - git
        - libmaxminddb
        - libmaxminddb-devel
    - name: Install dependencies for Ubuntu/Debian
      package:
        name: "{{ item }}"
        state: present
      ignore_errors: yes
      when: ansible_os_family == "Debian"
      loop:
        - wget
        - build-essential
        - libpcre3-dev
        - libssl-dev
        - zlib1g-dev
        - git
        - libmaxminddb0
        - libmaxminddb-dev

    - name: 清除目標目錄
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "{{ install_prefix }}"
        - "{{ tmp_dir }}"

    - name: 建立臨時目錄
      file:
        path: "{{ tmp_dir }}"
        state: directory
        mode: '0755'

    - name: 下載 OpenResty
      get_url:
        url: "https://openresty.org/download/{{ openresty_src }}.tar.gz"
        dest: "{{ tmp_dir }}/{{ openresty_src }}.tar.gz"

    - name: 解壓 OpenResty
      unarchive:
        src: "{{ tmp_dir }}/{{ openresty_src }}.tar.gz"
        dest: "{{ tmp_dir }}"
        remote_src: yes

    - name: 建立第三方模組目錄
      file:
        path: "{{ tmp_dir }}/3rd-modules"
        state: directory
        mode: '0755'

    - name: 克隆第三方模組
      git:
        repo: "{{ item.url }}"
        dest: "{{ tmp_dir }}/3rd-modules/{{ item.name }}"
        clone: yes
      loop: "{{ third_party_modules }}"

    - name: 建立 nginx 臨時目錄
      file:
        path: "{{ nginx_temp_path }}/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - client_body
        - proxy
        - fastcgi
        - uwsgi
        - scgi

    - name: 配置 OpenResty
      shell: |
        cd {{ tmp_dir }}/{{ openresty_src }} && \
        ./configure \
          --prefix={{ install_prefix }} \
          --sbin-path={{ install_prefix }}/nginx/sbin/nginx \
          --with-threads \
          --with-file-aio \
          --with-http_ssl_module \
          --with-http_v2_module \
          --with-http_flv_module \
          --with-http_mp4_module \
          --with-http_gunzip_module \
          --with-http_gzip_static_module \
          --with-http_stub_status_module \
          --with-http_random_index_module \
          --with-http_realip_module \
          --with-http_secure_link_module \
          --with-http_slice_module \
          --with-http_sub_module \
          --with-stream_realip_module \
          --with-stream --with-stream_ssl_module --with-stream_ssl_preread_module \
          --with-pcre \
          --http-client-body-temp-path={{ nginx_temp_path }}/client_body \
          --http-proxy-temp-path={{ nginx_temp_path }}/proxy \
          --http-fastcgi-temp-path={{ nginx_temp_path }}/fastcgi \
          --http-uwsgi-temp-path={{ nginx_temp_path }}/uwsgi \
          --http-scgi-temp-path={{ nginx_temp_path }}/scgi \
          --with-mail --with-mail_ssl_module \
          --add-module={{ tmp_dir }}/3rd-modules/nginx_upstream_check_module \
          --add-module={{ tmp_dir }}/3rd-modules/nginx-http-concat \
          --add-module={{ tmp_dir }}/3rd-modules/ngx_http_proxy_connect_module \
          --add-module={{ tmp_dir }}/3rd-modules/ngx_http_geoip2_module \
          --add-module={{ tmp_dir }}/3rd-modules/nginx-module-vts
      args:
        executable: /bin/bash

    - name: 應用 proxy_connect 模組補丁
      shell: |
        cd {{ tmp_dir }}/{{ openresty_src }} && \
        patch -d build/nginx-{{ nginx_version }} -p1 < {{ tmp_dir }}/3rd-modules/ngx_http_proxy_connect_module/patch/proxy_connect_rewrite_102101.patch
      args:
        executable: /bin/bash

    - name: 應用 upstream_check 模組補丁
      shell: |
        cd {{ tmp_dir }}/{{ openresty_src }} && \
        patch -d build/nginx-{{ nginx_version }} -p1 < {{ tmp_dir }}/3rd-modules/nginx_upstream_check_module/check_1.20.1+.patch
      args:
        executable: /bin/bash

    - name: 編譯 OpenResty
      shell: |
        cd {{ tmp_dir }}/{{ openresty_src }} && \
        gmake -j$(nproc)
      args:
        executable: /bin/bash

    - name: 安裝 OpenResty
      shell: |
        cd {{ tmp_dir }}/{{ openresty_src }} && \
        gmake install
      args:
        executable: /bin/bash

    - name: 清理臨時文件
      file:
        path: "{{ tmp_dir }}"
        state: absent
      when: false  # 預設不清理，若需要清理可改為 true

    - name: 打包 openresty 目錄到 /tmp/openresty.tar.gz
      command: tar -zcvf /tmp/openresty.tar.gz -C /opt openresty
      args:
        creates: /tmp/openresty.tar.gz
