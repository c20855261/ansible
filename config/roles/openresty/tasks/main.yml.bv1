---
#- name: 部署 OpenResty 到遠端伺服器
#  hosts: "{{ host }}"
#  become: yes
#  vars:
#    openresty_install_path: "/opt/openresty"
#    nginx_path: "/opt/openresty/nginx"
#    nginx_conf_path: "{{ nginx_path }}/conf"
    
#  tasks:
    # 建立 www 使用者（沒有家目錄）
    - name: 建立 www 使用者
      user:
        name: www
        comment: "Web Server User"
        shell: /sbin/nologin
        create_home: no
        system: yes
        state: present

    # 檢查 OpenResty 是否已安裝
    - name: 檢查 OpenResty 目錄是否存在
      stat:
        path: "{{ openresty_install_path }}"
      register: openresty_dir

    # 如果 OpenResty 不存在，解壓縮 tar.gz 檔案
    - name: 建立 /opt 目錄（如果不存在）
      file:
        path: /opt
        state: directory
        mode: '0755'
      when: not openresty_dir.stat.exists

    - name: 解壓縮 OpenResty 壓縮檔
      unarchive:
        src: "{{ openresty_version }}"
        #src: "files/openresty-1.25.tar.gz"
        dest: "/opt"
        owner: root
        group: root
        mode: '0755'
      when: not openresty_dir.stat.exists

    # 建立 GeoIP 目錄並下載資料庫
    - name: 建立 GeoIP 目錄
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ openresty_install_path }}/nginx/geoip2"
        - "{{ openresty_install_path }}/nginx/pid"
        
    - name: 下載 GeoIP 資料庫
      get_url:
        url: "{{ item }}"
        dest: "{{ openresty_install_path }}/nginx/geoip2/"
      loop:
        - "https://git.io/GeoLite2-City.mmdb"
        - "https://git.io/GeoLite2-Country.mmdb"
        
    # 建立 Nginx 配置目錄結構
    - name: 建立 Nginx 配置目錄
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "/opt/logs/nginx"
        - "{{ nginx_conf_path }}/conf.d"
        - "{{ nginx_conf_path }}/vhost"

    - name: copy nginx.conf
      copy:
        src: "files/nginx/nginx.conf"
        dest: "{{ nginx_conf_path }}"
        mode: '0644'

    # 根據需求設定其他配置
    - name: 設定權限
      file:
        path: "{{ openresty_install_path }}"
        state: directory
        mode: '0755'
        recurse: yes

    # 複製配置檔案到遠端主機
    - name: 複製 Nginx 配置檔案
      copy:
        src: "files/nginx/conf.d/"
        dest: "{{ nginx_conf_path }}/conf.d/"
        mode: '0644'
        
    # 5. 重新載入 Nginx 配置（如果 Nginx 已經在運行）
#    - name: 檢查 Nginx 是否運行中
#      shell: "pgrep -f {{ openresty_install_path }}/nginx/sbin/nginx || true"
#      register: nginx_process
#      changed_when: false
      
#    - name: 重新載入 Nginx 配置
#      shell: "{{ openresty_install_path }}/nginx/sbin/nginx -s reload"
#      when: nginx_process.stdout != ""
#      ignore_errors: yes
